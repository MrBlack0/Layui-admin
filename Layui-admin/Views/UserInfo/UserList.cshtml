
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="~/Content/layui/css/layui.css" media="all">
    <title>List</title>

</head>
<body>
    <div class="layui-fluid">
        <div class="">          
            <div class="layui-inline">
                <span style="padding-right:15px;">用户名</span>
                <div class="layui-input-inline">
                    <input class="layui-input" name="username" id="username" autocomplete="off">
                </div>
            </div>
            <div class="layui-inline">
                <label class="layui-form-label">邮箱</label>
                <div class="layui-input-inline">
                    <input class="layui-input" name="email" id="email" autocomplete="off">
                </div>
            </div>
            <button class="layui-btn" id="serarch" data-type="reload">搜索</button>
        </div>

        <table class="layui-hide" id="test" lay-filter="test"></table>
        <div id="pagetest"></div>
        <script type="text/html" id="checkboxTpl">
            <!-- 这里的 checked 的状态只是演示 -->
            <input type="checkbox" disabled name="lock" value="{{d.DeleteMark}}" title="删除" lay-filter="lockDemo" {{ d.DeleteMark == 1 ? 'checked' : '' }}>
        </script>

        <script type="text/html" id="toolbarDemo">
            <div class="layui-btn-container">
                <button class="layui-btn layui-btn-sm" lay-event="add">增加</button>
                <button class="layui-btn layui-btn-sm layui-btn-danger" lay-event="deletes">删除已选</button>
                <button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>
                <button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>
            </div>
        </script>
        <script type="text/html" id="barDemo">
            <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
            <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
        </script>

    </div>

    <script src="~/Content/layui/layui.js"></script>
    <script>
        layui.use(['table', 'layer'], function () {
            var table = layui.table, $ = layui.jquery, layer = layui.layer, form = layui.form;;
            Date.prototype.format = function (format) //author: meizz
            {
                var o = {
                    "M+": this.getMonth() + 1, //month
                    "d+": this.getDate(),    //day
                    "h+": this.getHours(),   //hour
                    "m+": this.getMinutes(), //minute
                    "s+": this.getSeconds(), //second
                    "q+": Math.floor((this.getMonth() + 3) / 3),  //quarter
                    "S": this.getMilliseconds() //millisecond
                }
                if (/(y+)/.test(format)) format = format.replace(RegExp.$1,
                    (this.getFullYear() + "").substr(4 - RegExp.$1.length));
                for (var k in o) if (new RegExp("(" + k + ")").test(format))
                    format = format.replace(RegExp.$1,
                        RegExp.$1.length == 1 ? o[k] :
                            ("00" + o[k]).substr(("" + o[k]).length));
                return format;
            }
            var index = layer.load(1);
            console.log('kkkkkkkkkk');
            console.log(index);
            var tbl = table.render({
                elem: '#test'
                , title: '用户列表'
                , url: '/UserInfo/GetUserList'
                , loading: true //翻页加loading
                //, parseData: function (res) { //res 即为原始返回的数据
                //    return {
                //        "code": res.code, //解析接口状态
                //        "msg": res.msg, //解析提示文本
                //        "count": res.count, //解析数据长度
                //        "data": res.data //解析数据列表
                //    };
                //}
                , cellMinWidth: 80
                , toolbar: '#toolbarDemo'
                , title: '用户数据表'
                , cols: [[
                    { type: 'checkbox' }
                    , { type: 'numbers' }
                    , { field: 'Id', title: 'ID', hide: true }
                    , { field: 'UserName', title: '用户名', }
                    , {
                        field: 'Email', title: '邮箱', templet: function (res) {
                            return '<em>' + res.Email + '</em>'
                        }
                    }
                    , { field: 'NickName', title: '昵称' }
                    , {
                        field: 'Sex', title: '性别', templet: function (d) {
                            return d.Sex == 1 ? '男' : '女'
                        }
                    }
                    //, { field: 'Sex', title: '性别', width: 85, templet: '#switchTpl', unresize: true }
                    , { field: 'Introduce', title: '自我介绍' }
                    , { field: 'City', title: '城市' }
                    , { field: 'LoginIp', title: 'IP' }
                    , { field: 'DeleteMark', title: '是否删除', width: 110, templet: '#checkboxTpl' }
                    , {
                        field: 'CreateDate', title: '加入时间', sort: true, templet: function (d) {
                            return new Date(parseInt(d.CreateDate.substr(6, 13))).format('yyyy-MM-dd hh:mm:ss');
                        }
                    }
                    , { fixed: 'right', title: '操作', toolbar: '#barDemo' }
                ]]
                , page: {
                    limit: 10,
                    limits: [10, 20, 50, 100],
                    curr: 1,
                    groups: 5
                },
                done: function (res, curr, count) {
                    //如果是异步请求数据方式，res即为你接口返回的信息。
                    //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                    //console.log(res);
                    console.log('4564545');
                    layer.close(index);//关闭加载

                    //得到当前页码
                    console.log(curr);

                    //得到数据总量
                    console.log(count);
                }
            });

            //table搜索
            $('#serarch').click(function () {
                reload();
            });

            //工具栏事件
            table.on('toolbar(test)', function (obj) {
                var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'add':
                        add();
                        break;
                    case 'deletes':
                        var data = checkStatus.data;
                        // var chks = JSON.stringify(data)
                        var ids = [];
                        data.forEach((item, index, array) => {
                            ids.push(item.Id);
                        });
                        //删除多条
                        deletes(ids);
                        break;
                    case 'getCheckLength':
                        var data = checkStatus.data;
                        layer.msg('选中了：' + data.length + ' 个');
                        break;
                    case 'isAll':
                        layer.msg(checkStatus.isAll ? '全选' : '未全选')
                        break;
                };
            });

            //监听行工具事件
            table.on('tool(test)', function (obj) {
                var data = obj.data;
                console.log('edit');
                console.log(obj)
                if (obj.event === 'del') {
                    layer.confirm('真的删除行么', function (index) {
                        //删除
                        $.ajax({
                            type: "post",
                            url: '/UserInfo/DelteUserByid',
                            data: { "userid": obj.data.Id },
                            dataType: "json",
                            success: function (data) {
                                //列表移除
                                obj.del();
                                layer.close(index);
                                layer.msg(data.msg);
                            },
                            error: function () {
                                alert("Post请求发生异常！");
                            }
                        });
                    });
                } else if (obj.event === 'edit') {
                    layer.open({
                        type: 2
                        , title: '添加用户'
                        , content: "http://" + window.location.host + "/UserInfo/EditUser?id=" + obj.data.Id
                        , maxmin: true
                        , area: ['60%', '70%']
                        , offset: 't'
                        , btn: ['确定', '取消']
                        , yes: function (index, layero) {
                            console.log('hello,ifram');
                            var iframeWindow = window['layui-layer-iframe' + index]
                                , submitID = 'addUser'
                                , submit = layero.find('iframe').contents().find('#' + submitID);
                            //监听提交
                            iframeWindow.layui.form.on('submit(' + submitID + ')', function (data) {
                                var field = data.field; //获取提交的字段
                                console.log(field);
                                //提交 Ajax 成功后，静态更新表格中的数据
                                $.ajax({
                                    type: "post",
                                    url: '/UserInfo/EditUser',
                                    data: field,
                                    dataType: "json",
                                    success: function (data) {
                                        layer.msg(data.msg);
                                    },
                                    error: function () {
                                        alert("Post请求发生异常！");
                                    }
                                });
                                table.reload('test'); //数据刷新
                                layer.close(index); //关闭弹层
                            });

                            submit.trigger('click');
                        }
                    });





                    //layer.prompt({
                    //    formType: 2
                    //    , value: data.email
                    //}, function (value, index) {
                    //    obj.update({
                    //        email: value
                    //    });
                    //    layer.close(index);
                    //});
                }
            });

            //监听锁定操作
            form.on('checkbox(lockDemo)', function (obj) {
                layer.tips(this.value + ' ' + this.name + '：' + obj.elem.checked, obj.othis);
            });

            //添加
            function add() {
                layer.open({
                    type: 2
                    , title: '添加用户'
                    , content: "http://" + window.location.host + "/UserInfo/AddUser"
                    , maxmin: true
                    , area: ['800px', '500px']
                    , offset: 't'
                    , btn: ['确定', '取消']
                    , yes: function (index, layero) {
                        var iframeWindow = window['layui-layer-iframe' + index]
                            , submitID = 'addUser'
                            , submit = layero.find('iframe').contents().find('#' + submitID);
                        //监听提交
                        iframeWindow.layui.form.on('submit(' + submitID + ')', function (data) {
                            var field = data.field; //获取提交的字段
                            console.log(field);
                            //提交 Ajax 成功后，静态更新表格中的数据
                            $.ajax({
                                type: "post",
                                url: '/UserInfo/AddUser',
                                data: field,
                                dataType: "json",
                                success: function (data) {
                                    layer.msg(data.msg);
                                },
                                error: function () {
                                    alert("Post请求发生异常！");
                                }
                            });
                            reload();
                            layer.close(index); //关闭弹层
                        });

                        submit.trigger('click');
                    }
                });
            }
            //删除已选
            function deletes(ids) {
                $.ajax({
                    type: "post",
                    url: '/UserInfo/DeleteUsers',
                    data: { "ids": ids },
                    dataType: "json",
                    success: function (data) {
                        //列表移除
                        layer.msg(data.msg);
                        reload();
                    },
                    error: function () {
                        alert("Post请求发生异常！");
                    }
                });
            }

            function reload() {
                tbl.reload({
                    where: {
                        username: $('#username').val(),
                        email: $('#email').val()
                    },//设定异步数据接口的额外参数，任意设
                    page: {
                        curr: 1,////重新从第 1 页开始
                        limit: 10
                    } 
                });
            }
        });


    </script>
</body>
</html>
