
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="~/Content/layui/css/layui.css" media="all">
    <title>List</title>
    
</head>
<body>
    <div class="layui-fluid">
        <blockquote class="layui-elem-quote">
            <div class="layui-btn-group">
                <button type="button" class="layui-btn" id="addProduct">增加</button>
                <button type="button" class="layui-btn" id="editProduct">删除</button>
            </div>
        </blockquote>

        <table class="layui-hide" id="test" lay-filter="test"></table>

        <script type="text/html" id="toolbarDemo">
            <div class="layui-btn-container">
                <button class="layui-btn layui-btn-sm" lay-event="getCheckData">获取选中行数据</button>
                <button class="layui-btn layui-btn-sm" lay-event="getCheckLength">获取选中数目</button>
                <button class="layui-btn layui-btn-sm" lay-event="isAll">验证是否全选</button>
            </div>
        </script>
        <script type="text/html" id="barDemo">
            <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
            <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
        </script>

    </div>

    <script src="~/Content/layui/layui.js"></script>
    <script>
        layui.use('table', function () {
            var table = layui.table;
            Date.prototype.format = function (format) //author: meizz
            {
                var o = {
                    "M+": this.getMonth() + 1, //month
                    "d+": this.getDate(),    //day
                    "h+": this.getHours(),   //hour
                    "m+": this.getMinutes(), //minute
                    "s+": this.getSeconds(), //second
                    "q+": Math.floor((this.getMonth() + 3) / 3),  //quarter
                    "S": this.getMilliseconds() //millisecond
                }
                if (/(y+)/.test(format)) format = format.replace(RegExp.$1,
                    (this.getFullYear() + "").substr(4 - RegExp.$1.length));
                for (var k in o) if (new RegExp("(" + k + ")").test(format))
                    format = format.replace(RegExp.$1,
                        RegExp.$1.length == 1 ? o[k] :
                            ("00" + o[k]).substr(("" + o[k]).length));
                return format;
            }

            table.render({
                elem: '#test'
                , url: '/UserInfo/GetUserList'
                //, parseData: function (res) { //res 即为原始返回的数据
                //    return {
                //        "code": res.code, //解析接口状态
                //        "msg": res.msg, //解析提示文本
                //        "count": res.count, //解析数据长度
                //        "data": res.data //解析数据列表
                //    };
                //}
                , cellMinWidth: 80
                , toolbar: '#toolbarDemo'
                , title: '用户数据表'
                , cols: [[
                    { type: 'numbers' }
                    , { type: 'checkbox' }
                    , { field: 'Id', title: 'ID', hide: true }
                    , { field: 'UserName', title: '用户名', }
                    , {
                        field: 'Email', title: '邮箱',  templet: function (res) {
                            return '<em>' + res.Email + '</em>'
                        }
                    }
                    , { field: 'NickName', title: '昵称' }
                    , {
                        field: 'Sex', title: '性别', templet: function (d) {
                            return d.Sex == 1? '男':'女'
                        }
                    }
                    , { field: 'Introduce', title: '自我介绍' }
                    , { field: 'City', title: '城市' }
                    , { field: 'LoginIp', title: 'IP' }
                    , {
                        field: 'CreateDate', title: '加入时间', sort: true, templet: function (d) {
                            return new Date(parseInt(d.CreateDate.substr(6, 13))).format('yyyy-MM-dd hh:mm:ss'); 
                        }
                    }
                    , { fixed: 'right', title: '操作', toolbar: '#barDemo' }
                ]]
                , page: true
            });

            //工具栏事件
            table.on('toolbar(test)', function (obj) {
                var checkStatus = table.checkStatus(obj.config.id);
                switch (obj.event) {
                    case 'getCheckData':
                        var data = checkStatus.data;
                        layer.alert(JSON.stringify(data));
                        break;
                    case 'getCheckLength':
                        var data = checkStatus.data;
                        layer.msg('选中了：' + data.length + ' 个');
                        break;
                    case 'isAll':
                        layer.msg(checkStatus.isAll ? '全选' : '未全选')
                        break;
                };
            });

        });
    </script>
</body>
</html>
